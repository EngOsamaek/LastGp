# Generated by Django 4.1 on 2023-08-19 01:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('neighbourhood', models.CharField(max_length=100)),
                ('streetName', models.CharField(max_length=100)),
                ('streetNumber', models.CharField(max_length=100)),
                ('doorNumber', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AdminProfit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='AdminSales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='media')),
                ('company_name', models.CharField(max_length=30)),
                ('type', models.CharField(max_length=20)),
                ('tax_no', models.IntegerField()),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('is_activated', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='Company_orders_list',
            fields=[
                ('orderNumber', models.IntegerField(primary_key=True, serialize=False)),
                ('datetime', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('customer_name', models.CharField(max_length=200)),
                ('customer_TC', models.IntegerField()),
                ('customer_birthdate', models.DateField()),
                ('customer_gender', models.BooleanField()),
                ('customer_phone', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='OrdersList',
            fields=[
                ('orderNumber', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('status', models.BooleanField()),
                ('total', models.FloatField()),
                ('date', models.DateField(auto_now=True)),
                ('customerID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=30)),
                ('price', models.FloatField()),
                ('amount', models.IntegerField()),
                ('is_available', models.BooleanField()),
                ('category', models.CharField(max_length=15)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.company')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Tokens',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='Moona.company')),
                ('company_name', models.CharField(max_length=200)),
                ('date', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'tokens',
            },
        ),
        migrations.CreateModel(
            name='VirtualOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('rating', models.IntegerField()),
                ('orderNumber', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.orderslist')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=200)),
                ('amount', models.IntegerField()),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.product')),
            ],
            options={
                'db_table': 'product_sizes',
            },
        ),
        migrations.CreateModel(
            name='products_images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('color', models.CharField(max_length=10)),
                ('image_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderTableView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.FloatField()),
                ('date', models.DateField()),
                ('customer_ID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.customer')),
                ('orderNumber', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.orderslist')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.FloatField()),
                ('datetime', models.DateField()),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.address')),
                ('companyID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.company')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.customer')),
                ('products', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.company_orders_list')),
            ],
        ),
        migrations.CreateModel(
            name='GenderProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.BooleanField()),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.product')),
            ],
        ),
        migrations.CreateModel(
            name='Company_VirtualOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('orderNumber', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.orderslist')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.product')),
            ],
        ),
        migrations.CreateModel(
            name='Company_User',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.company')),
            ],
        ),
        migrations.AddField(
            model_name='company_orders_list',
            name='products',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.virtualorder'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.product')),
                ('product_sizes', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.productsize')),
            ],
            options={
                'db_table': 'cart',
            },
        ),
        migrations.AddField(
            model_name='address',
            name='customerId',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Moona.customer'),
        ),
    ]
